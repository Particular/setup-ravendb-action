name: CI
on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  ci:
    name: ${{ matrix.os-name }}-${{ matrix.cluster-type.label }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019, ubuntu-22.04]
        cluster-type:
          - label: 'Single'
          - label: 'Cluster'
          - label: 'Both'
        include:
          # Add os-name alias for job name
          - os: windows-2019
            os-name: Windows
            raven-tag: 5.4-windows-latest
          - os: ubuntu-22.04
            os-name: Linux
            raven-tag: 5.4-ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
      - name: Run
        uses: ./
        with:
          ravendb-license: ${{ secrets.RAVENDB_LICENSE }}
          ravendb-mode: ${{ matrix.cluster-type.label }}
          ravendb-version: ${{ matrix.raven-tag }}
          tag: setup-ravendb-action
      - name: Validate
        shell: pwsh
        run: |
          echo "RavenDBSingleNodeUrl = $($Env:RavenDBSingleNodeUrl)"
          if ( ($Env:RavenDBSingleNodeUrl -le 0) -and ((${{ matrix.cluster-type.label }} -eq "Single") -or (${{ matrix.cluster-type.label }} -eq "Both") ) ) {
            throw "Environment variable 'RavenDBSingleNodeUrl' not set."
          }
          echo "CommaSeparatedRavenClusterUrls = $($Env:CommaSeparatedRavenClusterUrls)"
          if ( ($Env:CommaSeparatedRavenClusterUrls -le 0) -and ((${{ matrix.cluster-type.label }} -eq "Cluster") -or (${{ matrix.cluster-type.label }} -eq "Both") ) ) {
            throw "Environment variable 'CommaSeparatedRavenClusterUrls' not set."
          }
